trigger:
  branches:
    include:
      - main

variables:
  imageName: 'aks-flask-prod-env-app'
  acrName: 'aksflaskprodenvacr'            # your ACR name
  azureResourceGroup: 'aks-flask-prod-env-rg'
  aksClusterName: 'aks-flask-prod-env-cluster'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Image'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        echo "Logging into ACR: $(acrName)"
        az acr login --name $(acrName)
      displayName: 'Login to Azure Container Registry'
    - script: |
        docker build -t $(acrName).azurecr.io/$(imageName):latest \
                     -t $(acrName).azurecr.io/$(imageName):$(tag) \
                     ./app
      displayName: 'Docker build'
    - script: |
        docker push $(acrName).azurecr.io/$(imageName):latest
        docker push $(acrName).azurecr.io/$(imageName):$(tag)
      displayName: 'Docker push'

- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        echo "Get AKS credentials"
        az aks get-credentials --resource-group $(azureResourceGroup) --name $(aksClusterName) --overwrite-existing
      displayName: 'Get AKS credentials'
    - script: |
        kubectl apply -f k8s/
      displayName: 'Deploy Kubernetes Manifests'
